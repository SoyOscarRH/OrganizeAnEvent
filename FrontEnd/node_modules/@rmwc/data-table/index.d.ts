import * as React from 'react';
import { Component } from '@rmwc/base';
declare type SharedDataTableCellPropsT = {
    /** Align content to the start of the cell. */
    alignStart?: boolean;
    /** Align content to the middle of the cell. */
    alignMiddle?: boolean;
    /** Align content to the end of the cell. */
    alignEnd?: boolean;
};
export declare type DataTablePropsT = {
    /** The number of rows to affix to the top of the table when scrolling. */
    stickyRows?: 0 | 1;
    /** The number of columns to affix to the side of the table when scrolling. */
    stickyColumns?: 0 | 1;
};
/** @extends React.Component */
/** The DataTable Component. */
export declare class DataTable extends Component<DataTablePropsT> {
    static displayName: string;
    classNames: (props: DataTablePropsT) => (string | {
        'rmwc-data-table--sticky-columns': boolean;
        'rmwc-data-table--sticky-columns-1': boolean;
        'rmwc-data-table--sticky-rows': boolean;
        'rmwc-data-table--sticky-rows-1': boolean;
    })[];
    consumeProps: string[];
}
/** @extends React.Component */
/** The data table content. */
export declare class DataTableContent extends Component<{}> {
    static displayName: string;
    tag: string;
    classNames: string[];
}
/** @extends React.Component */
/** A header for the data table. */
export declare class DataTableHead extends Component<{}> {
    static displayName: string;
    tag: string;
    classNames: string[];
}
/** @extends React.Component */
/** A body for the data table. */
export declare class DataTableBody extends Component<{}> {
    static displayName: string;
    tag: string;
    classNames: string[];
}
export declare type DataTableRowPropsT = {
    /** Styles the row in a selected state. */
    selected?: boolean;
    /** Styles the row in an activated state. */
    activated?: boolean;
};
/** @extends React.Component */
/** A row for the data table. */
export declare class DataTableRow extends Component<{}> {
    static displayName: string;
    tag: string;
    classNames: (props: DataTableRowPropsT) => (string | {
        'rmwc-data-table__row--selected': boolean | undefined;
        'rmwc-data-table__row--activated': boolean | undefined;
    })[];
    consumeProps: string[];
}
export declare type DataTableHeadCellPropsT = {
    /** Make the column sortable. Null for not sorted, 1 for ascending, and -1 for descending. */
    sort?: null | number;
    /** A callback for when the sorting method changes. Null for not sorted, 1 for ascending, and -1 for descending.*/
    onSortChange?: (dir: null | number) => any;
    /** Children to pass to the cell. */
    children?: React.ReactNode;
} & SharedDataTableCellPropsT;
/** A header cell for the data table. */
export declare const DataTableHeadCell: React.ComponentType<DataTableHeadCellPropsT>;
export declare type DataTableCellPropsT = SharedDataTableCellPropsT;
/** @extends React.Component */
/** A cell for the DataTable */
export declare class DataTableCell extends Component<DataTableCellPropsT> {
    static displayName: string;
    tag: string;
    classNames: (props: SharedDataTableCellPropsT) => (string | {
        'rmwc-data-table__cell--align-start': boolean | undefined;
        'rmwc-data-table__cell--align-middle': boolean | undefined;
        'rmwc-data-table__cell--align-end': boolean | undefined;
    })[];
    consumeProps: string[];
}
export declare type SimpleDataTablePropsT = {
    /** Data to render. */
    data: Array<any[]>;
    /** Table headers to render. */
    headers?: Array<any[]>;
    /** A function that allows you to return custom props for a row. */
    getRowProps?: (row: any[], index: number, isHead: boolean) => Object;
    /** A function that allows you to return custom props for a cell. */
    getCellProps?: (cell: any[], index: number, isHead: boolean) => Object;
} & DataTablePropsT;
/** A simple data table to render matrices. */
export declare class SimpleDataTable extends React.Component<SimpleDataTablePropsT> {
    render(): JSX.Element;
}
export {};
