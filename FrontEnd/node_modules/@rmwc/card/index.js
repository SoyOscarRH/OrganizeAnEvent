'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardAction = exports.CardActionIcons = exports.CardActionButtons = exports.CardActions = exports.CardPrimaryAction = exports.CardMediaContent = exports.CardMedia = exports.Card = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _button = require('@rmwc/button');

var _base = require('@rmwc/base');

var _ripple = require('@rmwc/ripple');

var _iconButton = require('@rmwc/icon-button');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/****************************************************************
 * Card
 ****************************************************************/
var CardRoot = (0, _base.simpleTag)({
  displayName: 'CardRoot',
  classNames: function classNames(props) {
    return ['mdc-card', {
      'mdc-card--outlined': props.outlined
    }];
  },
  consumeProps: ['outlined']
});

/** A Card Component */
var Card = exports.Card = function Card(props) {
  return React.createElement(CardRoot, props);
};
Card.displayName = 'Card';

/****************************************************************
 * Card Media
 ****************************************************************/


var CardMediaRoot = (0, _base.simpleTag)({
  displayName: 'CardMediaRoot',
  tag: 'section',
  classNames: function classNames(props) {
    return ['mdc-card__media', {
      'mdc-card__media--square': props.square,
      'mdc-card__media--16-9': props.sixteenByNine
    }];
  },
  consumeProps: ['square', 'sixteenByNine']
});

/** Media area that displays a custom background-image with background-size: cover */
var CardMedia = exports.CardMedia = function CardMedia(props) {
  return React.createElement(CardMediaRoot, props);
};
CardMedia.displayName = 'CardMedia';

/** An absolutely-positioned box the same size as the media area, for displaying a title or icon on top of the background-image */
var CardMediaContent = exports.CardMediaContent = (0, _base.simpleTag)({
  displayName: 'CardMediaContent',
  classNames: 'mdc-card__media-content'
});

var CardPrimaryActionRoot = (0, _ripple.withRipple)({ surface: false })((0, _base.simpleTag)({
  displayName: 'CardPrimaryActionRoot',
  classNames: 'mdc-card__primary-action'
}));

/** The main clickable area for the primary content of the card */
var CardPrimaryAction = exports.CardPrimaryAction = function CardPrimaryAction(props) {
  return React.createElement(CardPrimaryActionRoot, props);
};
CardPrimaryAction.displayName = 'CardPrimaryAction';

/****************************************************************
 * Card Actions
 ****************************************************************/


var CardActionsRoot = (0, _base.simpleTag)({
  displayName: 'CardActionsRoot',
  tag: 'section',
  classNames: function classNames(props) {
    return ['mdc-card__actions', { 'mdc-card__actions--full-bleed': props.fullBleed }];
  },
  consumeProps: ['fullBleed']
});

/** Row containing action buttons and/or icons */
var CardActions = exports.CardActions = function CardActions(props) {
  return React.createElement(CardActionsRoot, props);
};
CardActions.displayName = 'CardActions';

/** A group of action buttons, displayed on the left side of the card (in LTR), adjacent to CardActionIcons */
var CardActionButtons = exports.CardActionButtons = (0, _base.simpleTag)({
  displayName: 'CardActionButtons',
  classNames: 'mdc-card__action-buttons'
});

/** A group of supplemental action icons, displayed on the right side of the card (in LTR), adjacent to CardActionButtons */
var CardActionIcons = exports.CardActionIcons = (0, _base.simpleTag)({
  displayName: 'CardActionIcons',
  classNames: 'mdc-card__action-icons'
});

var CardActionIcon = (0, _base.simpleTag)({
  tag: _iconButton.IconButton,
  classNames: ['mdc-card__action', 'mdc-card__action--icon']
});

var CardActionButton = (0, _base.simpleTag)({
  tag: _button.Button,
  classNames: ['mdc-card__action', 'mdc-card__action--button']
});

/** A Card action Button. Depending on the props that are passed, this will either render an instance of the Button component, or the IconButton component. */

var CardAction = exports.CardAction = function (_React$Component) {
  _inherits(CardAction, _React$Component);

  function CardAction() {
    _classCallCheck(this, CardAction);

    return _possibleConstructorReturn(this, (CardAction.__proto__ || Object.getPrototypeOf(CardAction)).apply(this, arguments));
  }

  _createClass(CardAction, [{
    key: 'render',
    value: function render() {
      return this.props.icon ? React.createElement(CardActionIcon, this.props) : React.createElement(CardActionButton, this.props);
    }
  }]);

  return CardAction;
}(React.Component);

Object.defineProperty(CardAction, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'CardAction'
});


CardAction.displayName = 'CardAction';
