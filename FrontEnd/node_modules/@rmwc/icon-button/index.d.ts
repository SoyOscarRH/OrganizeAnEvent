import { SimpleTagPropsT, CustomEventT } from '@rmwc/base';
import { IconPropsT } from '@rmwc/icon';
import { IconOptionsT } from '@rmwc/icon/defs';
import { WithRipplePropsT } from '@rmwc/ripple';
import * as React from 'react';
export declare type IconButtonPropsT = {
    /** Controls the on / off state of the a toggleable button. */
    checked?: boolean;
    /** An onChange callback that receives a custom event. */
    onChange?: (evt: CustomEventT<{
        isOn: boolean;
    }>) => any;
    /** Makes the button disabled */
    disabled?: boolean;
    /** If specified, renders a toggle with this icon as the on state. */
    onIcon?: React.ReactNode;
    /** Options for the onIcon */
    onIconOptions?: IconOptionsT;
} & SimpleTagPropsT & IconPropsT & WithRipplePropsT;
export declare const IconButtonRoot: React.ComponentType<IconButtonPropsT>;
declare type IconButtonIconPropsT = {
    on?: boolean;
} & IconPropsT;
export declare const IconButtonIcon: React.ComponentType<IconButtonIconPropsT>;
export declare const IconButton: ({ icon, iconOptions, ...rest }: IconButtonPropsT) => JSX.Element;
export default IconButton;
