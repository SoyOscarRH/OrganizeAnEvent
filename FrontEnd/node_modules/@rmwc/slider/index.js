'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slider = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdc = require('@material/slider/dist/mdc.slider');

var _base = require('@rmwc/base');

var _debounce = require('@rmwc/base/utils/debounce');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @extends React.Component */
var SliderRoot = function (_Component) {
  _inherits(SliderRoot, _Component);

  function SliderRoot() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SliderRoot);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SliderRoot.__proto__ || Object.getPrototypeOf(SliderRoot)).call.apply(_ref, [this].concat(args))), _this), Object.defineProperty(_this, 'classNames', {
      enumerable: true,
      writable: true,
      value: function value(props) {
        return ['mdc-slider', {
          'mdc-slider--discrete': props.discrete,
          'mdc-slider--display-markers': props.displayMarkers && props.discrete
        }];
      }
    }), Object.defineProperty(_this, 'consumeProps', {
      enumerable: true,
      writable: true,
      value: ['discrete', 'displayMarkers']
    }), _temp), _possibleConstructorReturn(_this, _ret);
  }

  return SliderRoot;
}(_base.Component);

Object.defineProperty(SliderRoot, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SliderRoot'
});

var SliderTrack = function (_React$Component) {
  _inherits(SliderTrack, _React$Component);

  function SliderTrack() {
    _classCallCheck(this, SliderTrack);

    return _possibleConstructorReturn(this, (SliderTrack.__proto__ || Object.getPrototypeOf(SliderTrack)).apply(this, arguments));
  }

  _createClass(SliderTrack, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement('div', { ref: this.props.elementRef, className: 'mdc-slider__track' });
    }
  }]);

  return SliderTrack;
}(React.Component);

Object.defineProperty(SliderTrack, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SliderTrack'
});

var SliderTrackMarkerContainer = function (_React$PureComponent) {
  _inherits(SliderTrackMarkerContainer, _React$PureComponent);

  function SliderTrackMarkerContainer() {
    _classCallCheck(this, SliderTrackMarkerContainer);

    return _possibleConstructorReturn(this, (SliderTrackMarkerContainer.__proto__ || Object.getPrototypeOf(SliderTrackMarkerContainer)).apply(this, arguments));
  }

  _createClass(SliderTrackMarkerContainer, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { className: 'mdc-slider__track-marker-container' },
        [].concat(_toConsumableArray(Array(this.props.markersCount))).map(function (v, i) {
          return React.createElement('div', { className: 'mdc-slider__track-marker', key: i });
        })
      );
    }
  }]);

  return SliderTrackMarkerContainer;
}(React.PureComponent);

Object.defineProperty(SliderTrackMarkerContainer, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SliderTrackMarkerContainer'
});

var SliderPin = function (_React$Component2) {
  _inherits(SliderPin, _React$Component2);

  function SliderPin() {
    _classCallCheck(this, SliderPin);

    return _possibleConstructorReturn(this, (SliderPin.__proto__ || Object.getPrototypeOf(SliderPin)).apply(this, arguments));
  }

  _createClass(SliderPin, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { className: 'mdc-slider__pin' },
        React.createElement('span', {
          ref: this.props.elementRef,
          className: 'mdc-slider__pin-value-marker'
        })
      );
    }
  }]);

  return SliderPin;
}(React.Component);

Object.defineProperty(SliderPin, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SliderPin'
});

var SliderThumb = function (_React$Component3) {
  _inherits(SliderThumb, _React$Component3);

  function SliderThumb() {
    _classCallCheck(this, SliderThumb);

    return _possibleConstructorReturn(this, (SliderThumb.__proto__ || Object.getPrototypeOf(SliderThumb)).apply(this, arguments));
  }

  _createClass(SliderThumb, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        'svg',
        { className: 'mdc-slider__thumb', width: '21', height: '21' },
        React.createElement('circle', { cx: '10.5', cy: '10.5', r: '7.875' })
      );
    }
  }]);

  return SliderThumb;
}(React.Component);

Object.defineProperty(SliderThumb, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SliderThumb'
});

var SliderFocusRing = function (_React$Component4) {
  _inherits(SliderFocusRing, _React$Component4);

  function SliderFocusRing() {
    _classCallCheck(this, SliderFocusRing);

    return _possibleConstructorReturn(this, (SliderFocusRing.__proto__ || Object.getPrototypeOf(SliderFocusRing)).apply(this, arguments));
  }

  _createClass(SliderFocusRing, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement('div', { className: 'mdc-slider__focus-ring' });
    }
  }]);

  return SliderFocusRing;
}(React.Component);

Object.defineProperty(SliderFocusRing, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SliderFocusRing'
});

var Slider = exports.Slider = function (_FoundationComponent) {
  _inherits(Slider, _FoundationComponent);

  function Slider(props) {
    _classCallCheck(this, Slider);

    var _this7 = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));

    Object.defineProperty(_this7, 'state', {
      enumerable: true,
      writable: true,
      value: {
        trackMarkersCount: 0,
        pinContainerStyle: {}
      }
    });

    _this7.createClassList('root_');
    _this7.createPropsList('root_');
    _this7.createPropsList('thumbContainer_');

    // Fixes an issue where sythetic events were being
    // accessed in the Foundation and causing an error
    var existingInteractionStartHandler_ = _this7.foundation_.interactionStartHandler_;
    _this7.foundation_.interactionStartHandler_ = function (evt) {
      evt.persist();
      existingInteractionStartHandler_(evt);
    };
    return _this7;
  }

  /** @return {number} */


  _createClass(Slider, [{
    key: 'layout',
    value: function layout() {
      this.foundation_.layout();
    }
  }, {
    key: 'sync',
    value: function sync(nextProps) {
      var _this8 = this;

      // value

      (0, _base.syncFoundationProp)(nextProps.value, this.value, function () {
        return _this8.value = nextProps.value !== undefined ? Number(nextProps.value) : _this8.value;
      });

      // max
      (0, _base.syncFoundationProp)(nextProps.max, this.max, function () {
        return _this8.max = nextProps.max !== undefined ? +nextProps.max : _this8.max;
      });
      // min
      (0, _base.syncFoundationProp)(nextProps.min, this.min, function () {
        return _this8.min = nextProps.min !== undefined ? +nextProps.min : _this8.min;
      });
      // step
      (0, _base.syncFoundationProp)(nextProps.step, this.step, function () {
        return _this8.step = nextProps.step !== undefined ? +nextProps.step : _this8.step;
      });
      // disabled
      (0, _base.syncFoundationProp)(nextProps.disabled, this.disabled, function () {
        return _this8.disabled = !!nextProps.disabled;
      });
      // discrete
      (0, _base.syncFoundationProp)(nextProps.discrete, this.discrete, function () {
        return _this8.discrete = !!nextProps.discrete;
      });
      //eslint-disable-next-line eqeqeq
      if (this.discrete && this.foundation_ && this.foundation_.getStep() == 0) {
        this.step = 1;
      }
      // displayMarkers
      (0, _base.syncFoundationProp)(nextProps.displayMarkers, this.displayMarkers, function () {
        _this8.displayMarkers = !!nextProps.displayMarkers;
        window.requestAnimationFrame(function () {
          return _this8.foundation_ && _this8.foundation_.setupTrackMarker();
        });
      });
    }
  }, {
    key: 'getDefaultFoundation',
    value: function getDefaultFoundation() {
      var _this9 = this;

      return new _mdc.MDCSliderFoundation({
        hasClass: function hasClass(className) {
          return _this9.classList.root_.has(className);
        },
        addClass: function addClass(className) {
          return _this9.classList.root_.add(className);
        },
        removeClass: function removeClass(className) {
          return _this9.classList.root_.remove(className);
        },
        getAttribute: function getAttribute(name) {
          return _this9.propsList.root_.get(name);
        },
        setAttribute: (0, _debounce.debounce)(function (name, value) {
          return _this9.propsList.root_ && _this9.propsList.root_.add(name, value);
        }, 300),
        removeAttribute: function removeAttribute(name) {
          return _this9.propsList.root_.remove(name);
        },
        computeBoundingRect: function computeBoundingRect() {
          return _this9.root_ && _this9.root_.getBoundingClientRect();
        },
        getTabIndex: function getTabIndex() {
          return _this9.root_ && _this9.root_.tabIndex;
        },
        registerInteractionHandler: function registerInteractionHandler(type, handler) {
          _this9.propsList.root_.addEventListener(type, handler);
        },
        deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
          _this9.propsList.root_.removeEventListener(type, handler);
        },
        registerThumbContainerInteractionHandler: function registerThumbContainerInteractionHandler(type, handler) {
          _this9.propsList.thumbContainer_.addEventListener(type, handler);
        },
        deregisterThumbContainerInteractionHandler: function deregisterThumbContainerInteractionHandler(type, handler) {
          _this9.propsList.thumbContainer_.removeEventListener(type, handler);
        },
        registerBodyInteractionHandler: function registerBodyInteractionHandler(type, handler) {
          document.body && document.body.addEventListener(type, handler);
        },
        deregisterBodyInteractionHandler: function deregisterBodyInteractionHandler(type, handler) {
          document.body && document.body.removeEventListener(type, handler);
        },
        registerResizeHandler: function registerResizeHandler(handler) {
          window.addEventListener('resize', handler);
        },
        deregisterResizeHandler: function deregisterResizeHandler(handler) {
          window.removeEventListener('resize', handler);
        },
        notifyInput: function notifyInput() {
          _this9.emit('onInput', { value: _this9.value });
        },
        notifyChange: function notifyChange() {
          _this9.emit('onChange', { value: _this9.value });
        },
        setThumbContainerStyleProperty: function setThumbContainerStyleProperty(propertyName, value) {
          _this9.thumbContainer_ && _this9.thumbContainer_.style.setProperty(propertyName, value);
        },
        setTrackStyleProperty: function setTrackStyleProperty(propertyName, value) {
          _this9.track_ && _this9.track_.style.setProperty(propertyName, value);
        },
        setMarkerValue: function setMarkerValue(value) {
          _this9.pinValueMarker_ && (_this9.pinValueMarker_.innerText = value);
        },
        appendTrackMarkers: function appendTrackMarkers(numMarkers) {
          _this9.setState({ trackMarkersCount: numMarkers });
        },
        removeTrackMarkers: function removeTrackMarkers() {
          _this9.setState({ trackMarkersCount: 0 });
        },
        setLastTrackMarkersStyleProperty: function setLastTrackMarkersStyleProperty(propertyName, value) {
          if (_this9.root_) {
            // We remove and append new nodes, thus, the last track marker must be dynamically found.
            var lastTrackMarker = _this9.root_.querySelector(_mdc.MDCSliderFoundation.strings.LAST_TRACK_MARKER_SELECTOR);
            lastTrackMarker && lastTrackMarker.style.setProperty(propertyName, value);
          }
        },
        isRTL: function isRTL() {
          return _this9.root_ && getComputedStyle(_this9.root_).direction === 'rtl';
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this10 = this;

      var _props = this.props,
          value = _props.value,
          min = _props.min,
          max = _props.max,
          discrete = _props.discrete,
          displayMarkers = _props.displayMarkers,
          step = _props.step,
          disabled = _props.disabled,
          onChange = _props.onChange,
          onInput = _props.onInput,
          children = _props.children,
          rest = _objectWithoutProperties(_props, ['value', 'min', 'max', 'discrete', 'displayMarkers', 'step', 'disabled', 'onChange', 'onInput', 'children']);

      var dataStep = step ? { 'data-step': step } : {};
      var tsxValue = value;
      var tsxMax = max;

      if (displayMarkers && !discrete) {
        console.warn('The \'displayMarkers\' prop on rmwc Slider will\n        only work in conjunction with the \'discrete\' prop');
      }

      return React.createElement(
        SliderRoot,
        Object.assign({
          tabIndex: 0
          //eslint-disable-next-line jsx-a11y/role-has-required-aria-props
          , role: 'slider',
          'aria-valuemax': tsxMax,
          'aria-valuenow': tsxValue,
          'aria-label': 'Select Value',
          elementRef: function elementRef(ref) {
            return _this10.root_ = ref;
          },
          discrete: discrete,
          displayMarkers: displayMarkers
        }, disabled ? { 'aria-disabled': disabled } : {}, dataStep, this.propsList.root_.all(rest), {
          className: this.classList.root_.renderToString()
        }),
        React.createElement(
          'div',
          { className: 'mdc-slider__track-container' },
          React.createElement(SliderTrack, { elementRef: function elementRef(ref) {
              return _this10.track_ = ref;
            } }),
          displayMarkers && React.createElement(SliderTrackMarkerContainer, {
            markersCount: this.state.trackMarkersCount
          })
        ),
        React.createElement(
          'div',
          Object.assign({
            className: 'mdc-slider__thumb-container',
            ref: function ref(_ref2) {
              return _this10.thumbContainer_ = _ref2;
            }
          }, this.propsList.thumbContainer_.all()),
          discrete && React.createElement(SliderPin, { elementRef: function elementRef(ref) {
              return _this10.pinValueMarker_ = ref;
            } }),
          React.createElement(SliderThumb, null),
          React.createElement(SliderFocusRing, null)
        ),
        children
      );
    }
  }, {
    key: 'value',
    get: function get() {
      return this.foundation_.getValue();
    }

    /** @param {number} value */
    ,
    set: function set(value) {
      this.foundation_.setValue(value);
    }

    /** @return {number} */

  }, {
    key: 'min',
    get: function get() {
      return this.foundation_.getMin();
    }

    /** @param {number} min */
    ,
    set: function set(min) {
      this.foundation_.setMin(min);
    }

    /** @return {number} */

  }, {
    key: 'max',
    get: function get() {
      return this.foundation_.getMax();
    }

    /** @param {number} max */
    ,
    set: function set(max) {
      this.foundation_.setMax(max);
    }

    /** @return {number} */

  }, {
    key: 'step',
    get: function get() {
      return this.foundation_.getStep();
    }

    /** @param {number} step */
    ,
    set: function set(step) {
      this.foundation_.setStep(step);
    }

    /** @return {boolean} */

  }, {
    key: 'disabled',
    get: function get() {
      return this.foundation_.isDisabled();
    }

    /** @param {boolean} disabled */
    ,
    set: function set(disabled) {
      this.foundation_.setDisabled(disabled);
    }
  }, {
    key: 'discrete',
    get: function get() {
      return !!(this.foundation_ && this.foundation_.isDiscrete_);
    },
    set: function set(isDiscrete) {
      if (this.foundation_) {
        this.foundation_.isDiscrete_ = isDiscrete;
      }
    }
  }, {
    key: 'displayMarkers',
    get: function get() {
      return !!this.foundation_ && this.foundation_.hasTrackMarker_;
    },
    set: function set(isDisplayMarkers) {
      if (this.foundation_) {
        this.foundation_.hasTrackMarker_ = isDisplayMarkers;
      }
    }
  }]);

  return Slider;
}(_base.FoundationComponent);

exports.default = Slider;
