import { WithRipplePropsT } from '@rmwc/ripple';
import * as React from 'react';
import { FoundationComponent } from '@rmwc/base';
export declare type CheckboxPropsT = {
    /** A DOM ID for the toggle. */
    id?: string;
    /** Disables the control. */
    disabled?: boolean;
    /** Toggle the control on and off. */
    checked?: boolean | string;
    /** The value of the control. */
    value?: boolean | string | number;
    /** Make the control indeterminate */
    indeterminate?: boolean;
    /** A label for the control. */
    label?: string;
} & WithRipplePropsT & React.InputHTMLAttributes<HTMLInputElement>;
/**
 * A Checkbox component
 */
export declare class Checkbox extends FoundationComponent<CheckboxPropsT> {
    static displayName: string;
    nativeCb_: HTMLInputElement | null;
    root_: HTMLElement | null;
    generatedId: string;
    handleChange_: any;
    constructor(props: CheckboxPropsT);
    componentDidMount(): void;
    componentWillUnmount(): void;
    sync(nextProps: CheckboxPropsT): void;
    getDefaultFoundation(): any;
    render(): JSX.Element;
}
export default Checkbox;
