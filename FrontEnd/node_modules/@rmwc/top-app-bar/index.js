'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleTopAppBar = exports.TopAppBar = exports.TopAppBarFixedAdjust = exports.TopAppBarTitle = exports.TopAppBarActionItem = exports.TopAppBarNavigationIcon = exports.TopAppBarSection = exports.TopAppBarRow = exports.TopAppBarRoot = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _mdc = require('@material/top-app-bar/dist/mdc.topAppBar');

var _icon = require('@rmwc/icon');

var _base = require('@rmwc/base');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TopAppBarRoot = exports.TopAppBarRoot = (0, _base.simpleTag)({
  displayName: 'TopAppBarRoot',
  tag: 'header',
  classNames: function classNames(props) {
    return ['mdc-top-app-bar', {
      'mdc-top-app-bar--fixed': props.fixed,
      'mdc-top-app-bar--prominent': props.prominent,
      'mdc-top-app-bar--short': props.short || props.shortCollapsed,
      'mdc-top-app-bar--short-collapsed': props.shortCollapsed,
      'mdc-top-app-bar--dense': props.dense
    }];
  },
  consumeProps: ['fixed', 'prominent', 'short', 'shortCollapsed', 'dense']
});

/** A row for the app bar. */
var TopAppBarRow = exports.TopAppBarRow = (0, _base.simpleTag)({
  displayName: 'TopAppBarRow',
  classNames: 'mdc-top-app-bar__row'
});

var TopAppBarSectionRoot = (0, _base.simpleTag)({
  displayName: 'TopAppBarSectionRoot',
  tag: 'section',
  classNames: function classNames(props) {
    return ['mdc-top-app-bar__section', {
      'mdc-top-app-bar__section--align-start': props.alignStart,
      'mdc-top-app-bar__section--align-end': props.alignEnd
    }];
  },
  consumeProps: ['alignStart', 'alignEnd']
});

/** A section for the app bar. */
var TopAppBarSection = exports.TopAppBarSection = function TopAppBarSection(props) {
  return React.createElement(TopAppBarSectionRoot, props);
};
TopAppBarSection.displayName = 'TopAppBarSection';

/** A navigation icon for the top app bar. This is an instance of the Icon component. */
var TopAppBarNavigationIcon = exports.TopAppBarNavigationIcon = (0, _base.simpleTag)({
  displayName: 'TopAppBarNavigationIcon',
  classNames: 'mdc-top-app-bar__navigation-icon',
  tag: _icon.Icon
});

/** Action items for the top app bar. This is an instance of the Icon component.*/
var TopAppBarActionItem = exports.TopAppBarActionItem = (0, _base.simpleTag)({
  displayName: 'TopAppBarActionItem',
  classNames: 'mdc-top-app-bar__action-item',
  tag: _icon.Icon
});

/** A title for the top app bar. */
var TopAppBarTitle = exports.TopAppBarTitle = (0, _base.simpleTag)({
  displayName: 'TopAppBarTitle',
  classNames: 'mdc-top-app-bar__title'
});

var TopAppBarFixedAdjustRoot = (0, _base.simpleTag)({
  displayName: 'TopAppBarFixedAdjustRoot',
  classNames: function classNames(props) {
    return ['mdc-top-app-bar--fixed-adjust', {
      'mdc-top-app-bar--dense-fixed-adjust': props.dense,
      'mdc-top-app-bar--prominent-fixed-adjust': props.prominent,
      'mdc-top-app-bar--dense-prominent-fixed-adjust': props.denseProminent,
      'mdc-top-app-bar--short-fixed-adjust': props.short
    }];
  },
  consumeProps: ['dense', 'denseProminent', 'prominent', 'short']
});

/** An optional component to fill the space when the TopAppBar is fixed. Place it directly after the TopAppBar. */
var TopAppBarFixedAdjust = exports.TopAppBarFixedAdjust = function TopAppBarFixedAdjust(props) {
  return React.createElement(TopAppBarFixedAdjustRoot, props);
};

TopAppBarFixedAdjust.displayName = 'TopAppBarFixedAdjust';

/** A TopAppBar component */

var TopAppBar = exports.TopAppBar = function (_withFoundation) {
  _inherits(TopAppBar, _withFoundation);

  function TopAppBar() {
    _classCallCheck(this, TopAppBar);

    return _possibleConstructorReturn(this, (TopAppBar.__proto__ || Object.getPrototypeOf(TopAppBar)).apply(this, arguments));
  }

  _createClass(TopAppBar, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          onNav = _props.onNav,
          apiRef = _props.apiRef,
          rest = _objectWithoutProperties(_props, ['onNav', 'apiRef']);

      var root_ = this.foundationRefs.root_;

      return React.createElement(TopAppBarRoot, Object.assign({}, rest, { elementRef: root_ }));
    }
  }]);

  return TopAppBar;
}((0, _base.withFoundation)({
  constructor: _mdc.MDCTopAppBar,
  adapter: {}
}));

Object.defineProperty(TopAppBar, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'TopAppBar'
});

/** A simplified syntax for creating an AppBar. */
var SimpleTopAppBar = exports.SimpleTopAppBar = function (_React$Component) {
  _inherits(SimpleTopAppBar, _React$Component);

  function SimpleTopAppBar() {
    _classCallCheck(this, SimpleTopAppBar);

    return _possibleConstructorReturn(this, (SimpleTopAppBar.__proto__ || Object.getPrototypeOf(SimpleTopAppBar)).apply(this, arguments));
  }

  _createClass(SimpleTopAppBar, [{
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          title = _props2.title,
          actionItems = _props2.actionItems,
          navigationIcon = _props2.navigationIcon,
          startContent = _props2.startContent,
          endContent = _props2.endContent,
          rest = _objectWithoutProperties(_props2, ['title', 'actionItems', 'navigationIcon', 'startContent', 'endContent']);

      return React.createElement(
        TopAppBar,
        rest,
        React.createElement(
          TopAppBarRow,
          null,
          React.createElement(
            TopAppBarSection,
            { alignStart: true },
            !!navigationIcon && React.createElement(TopAppBarNavigationIcon, Object.assign({
              icon: 'menu'
            }, typeof navigationIcon === 'boolean' ? {} : navigationIcon)),
            !!title && React.createElement(
              TopAppBarTitle,
              null,
              title
            ),
            startContent
          ),
          (!!actionItems || endContent) && React.createElement(
            TopAppBarSection,
            { alignEnd: true },
            endContent,
            !!actionItems && actionItems.map(function (actionItemProps, index) {
              return React.createElement(TopAppBarActionItem, Object.assign({}, actionItemProps, { key: index }));
            })
          )
        )
      );
    }
  }]);

  return SimpleTopAppBar;
}(React.Component);

Object.defineProperty(SimpleTopAppBar, 'displayName', {
  enumerable: true,
  writable: true,
  value: 'SimpleTopAppBar'
});
