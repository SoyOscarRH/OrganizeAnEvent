import { Component } from '@rmwc/base';
import * as React from 'react';
declare type CircularProgressPropsT = {
    /** Max value for determinate progress bars. */
    max?: number;
    /** Min value for determinate progress bars. */
    min?: number;
    /** Value for determinate progress bars. */
    progress?: number;
    /** The size of the loader you would like to render. */
    size?: 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge' | number;
    /** Additional className for the progress indicator. */
    className?: string;
    /** Additional styles for the progress indicator. */
    style?: Object;
};
declare type CircularProgressRootPropsT = {
    _size: string | number;
    _progress?: number;
};
export declare class CircularProgressRoot extends Component<CircularProgressRootPropsT> {
    static displayName: string;
    classNames: (props: CircularProgressRootPropsT) => (string | {
        [x: string]: boolean | "" | 0;
        'rmwc-circular-progress--indeterminate': boolean;
        'rmwc-circular-progress--thickerstroke': boolean | "" | 0;
    })[];
    consumeProps: string[];
}
/** A Circular Progress indicator. */
export declare class CircularProgress extends React.Component<CircularProgressPropsT> {
    static defaultProps: {
        progress: undefined;
        size: string;
    };
    calculateRatio(value: number): number;
    circularStyle(size: number): {
        strokeDasharray: string;
    } | undefined;
    render(): JSX.Element;
}
export {};
