[
  {
    "description": "",
    "displayName": "MenuRoot",
    "methods": [
      {
        "name": "classNames",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "props",
            "type": {
              "name": "intersection",
              "raw": "{\n  /** Whether or not the Menu is open. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Callback that when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Callback that fires when a Menu item is selected. */\n  onSelect?: (evt: CustomEventT<SelectedEventDetailT>) => mixed,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT\n} & SimpleTagPropsT",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n  /** Whether or not the Menu is open. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Callback that when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Callback that fires when a Menu item is selected. */\n  onSelect?: (evt: CustomEventT<SelectedEventDetailT>) => mixed,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": "open",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "fixed",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "onClose",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<void>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "void"
                                    }
                                  ],
                                  "raw": "CustomEventT<void>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "onSelect",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<SelectedEventDetailT>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "signature",
                                      "type": "object",
                                      "raw": "{\n  index: number,\n  item: HTMLElement\n}",
                                      "signature": {
                                        "properties": [
                                          {
                                            "key": "index",
                                            "value": {
                                              "name": "number",
                                              "required": true
                                            }
                                          },
                                          {
                                            "key": "item",
                                            "value": {
                                              "name": "HTMLElement",
                                              "required": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "raw": "CustomEventT<SelectedEventDetailT>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "anchorCorner",
                        "value": {
                          "name": "union",
                          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
                          "elements": [
                            {
                              "name": "literal",
                              "value": "'bottomEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomStart'"
                            },
                            {
                              "name": "literal",
                              "value": "'topEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'topLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'topRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'topStart'"
                            }
                          ],
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "SimpleTagPropsT"
                }
              ],
              "alias": "MenuPropsT"
            }
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "tabIndex": {
        "defaultValue": {
          "value": "'-1'",
          "computed": false
        },
        "required": false
      }
    }
  },
  {
    "description": "",
    "displayName": "MenuItems",
    "methods": [],
    "props": {
      "role": {
        "defaultValue": {
          "value": "'menu'",
          "computed": false
        },
        "required": false
      },
      "aria-hidden": {
        "defaultValue": {
          "value": "'true'",
          "computed": false
        },
        "required": false
      }
    }
  },
  {
    "description": "This is just the ListItem component exported from the Menu module for convenience. You can use `ListItem` or `SimpleListItem` components from the List section as long as you add `role=\"menuitem\"` and `tabIndex=\"0\"` to the components for accessibility.",
    "displayName": "MenuItem",
    "methods": []
  },
  {
    "description": "A menu component for displaying lists items.",
    "displayName": "Menu",
    "methods": [
      {
        "name": "syncWithProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "nextProps",
            "type": {
              "name": "intersection",
              "raw": "{\n  /** Whether or not the Menu is open. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Callback that when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Callback that fires when a Menu item is selected. */\n  onSelect?: (evt: CustomEventT<SelectedEventDetailT>) => mixed,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT\n} & SimpleTagPropsT",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n  /** Whether or not the Menu is open. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Callback that when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Callback that fires when a Menu item is selected. */\n  onSelect?: (evt: CustomEventT<SelectedEventDetailT>) => mixed,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": "open",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "fixed",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "onClose",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<void>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "void"
                                    }
                                  ],
                                  "raw": "CustomEventT<void>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "onSelect",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<SelectedEventDetailT>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "signature",
                                      "type": "object",
                                      "raw": "{\n  index: number,\n  item: HTMLElement\n}",
                                      "signature": {
                                        "properties": [
                                          {
                                            "key": "index",
                                            "value": {
                                              "name": "number",
                                              "required": true
                                            }
                                          },
                                          {
                                            "key": "item",
                                            "value": {
                                              "name": "HTMLElement",
                                              "required": true
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "raw": "CustomEventT<SelectedEventDetailT>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "anchorCorner",
                        "value": {
                          "name": "union",
                          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
                          "elements": [
                            {
                              "name": "literal",
                              "value": "'bottomEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomStart'"
                            },
                            {
                              "name": "literal",
                              "value": "'topEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'topLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'topRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'topStart'"
                            }
                          ],
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "SimpleTagPropsT"
                }
              ],
              "alias": "MenuPropsT"
            }
          }
        ],
        "returns": null
      },
      {
        "name": "onCloseHandler_",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "evt",
            "type": {
              "name": "CustomEventT",
              "elements": [
                {
                  "name": "void"
                }
              ],
              "raw": "CustomEventT<void>",
              "alias": "CustomEventT"
            }
          }
        ],
        "returns": null
      },
      {
        "name": "destroy",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "open": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Whether or not the Menu is open."
      },
      "fixed": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Make the menu position fixed."
      },
      "onClose": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<void>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "void"
                    }
                  ],
                  "raw": "CustomEventT<void>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback that when the menu is closed."
      },
      "onSelect": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<SelectedEventDetailT>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "signature",
                      "type": "object",
                      "raw": "{\n  index: number,\n  item: HTMLElement\n}",
                      "signature": {
                        "properties": [
                          {
                            "key": "index",
                            "value": {
                              "name": "number",
                              "required": true
                            }
                          },
                          {
                            "key": "item",
                            "value": {
                              "name": "HTMLElement",
                              "required": true
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "raw": "CustomEventT<SelectedEventDetailT>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback that fires when a Menu item is selected."
      },
      "anchorCorner": {
        "flowType": {
          "name": "union",
          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
          "elements": [
            {
              "name": "literal",
              "value": "'bottomEnd'"
            },
            {
              "name": "literal",
              "value": "'bottomLeft'"
            },
            {
              "name": "literal",
              "value": "'bottomRight'"
            },
            {
              "name": "literal",
              "value": "'bottomStart'"
            },
            {
              "name": "literal",
              "value": "'topEnd'"
            },
            {
              "name": "literal",
              "value": "'topLeft'"
            },
            {
              "name": "literal",
              "value": "'topRight'"
            },
            {
              "name": "literal",
              "value": "'topStart'"
            }
          ]
        },
        "required": false,
        "description": "Manually position the menu to one of the corners."
      }
    }
  },
  {
    "description": "",
    "displayName": "MenuSurfaceRoot",
    "methods": [
      {
        "name": "classNames",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "props",
            "type": {
              "name": "intersection",
              "raw": "{\n  /** Opens the menu. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT,\n  /** Callback for when the menu is opened. */\n  onOpen?: (evt: CustomEventT<void>) => mixed,\n  /** Callback for when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Children to render. */\n  children?: React.Node\n} & SimpleTagPropsT",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n  /** Opens the menu. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT,\n  /** Callback for when the menu is opened. */\n  onOpen?: (evt: CustomEventT<void>) => mixed,\n  /** Callback for when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Children to render. */\n  children?: React.Node\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": "open",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "fixed",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "anchorCorner",
                        "value": {
                          "name": "union",
                          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
                          "elements": [
                            {
                              "name": "literal",
                              "value": "'bottomEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomStart'"
                            },
                            {
                              "name": "literal",
                              "value": "'topEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'topLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'topRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'topStart'"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "onOpen",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<void>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "void"
                                    }
                                  ],
                                  "raw": "CustomEventT<void>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "onClose",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<void>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "void"
                                    }
                                  ],
                                  "raw": "CustomEventT<void>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "children",
                        "value": {
                          "name": "ReactNode",
                          "raw": "React.Node",
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "SimpleTagPropsT"
                }
              ],
              "alias": "MenuSurfacePropsT"
            }
          }
        ],
        "returns": null
      }
    ]
  },
  {
    "description": "A generic menu component for displaying any type of content.",
    "displayName": "MenuSurface",
    "methods": [
      {
        "name": "syncWithProps",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "nextProps",
            "type": {
              "name": "intersection",
              "raw": "{\n  /** Opens the menu. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT,\n  /** Callback for when the menu is opened. */\n  onOpen?: (evt: CustomEventT<void>) => mixed,\n  /** Callback for when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Children to render. */\n  children?: React.Node\n} & SimpleTagPropsT",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{\n  /** Opens the menu. */\n  open?: boolean,\n  /** Make the menu position fixed. */\n  fixed?: boolean,\n  /** Manually position the menu to one of the corners. */\n  anchorCorner?: AnchorT,\n  /** Callback for when the menu is opened. */\n  onOpen?: (evt: CustomEventT<void>) => mixed,\n  /** Callback for when the menu is closed. */\n  onClose?: (evt: CustomEventT<void>) => mixed,\n  /** Children to render. */\n  children?: React.Node\n}",
                  "signature": {
                    "properties": [
                      {
                        "key": "open",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "fixed",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "anchorCorner",
                        "value": {
                          "name": "union",
                          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
                          "elements": [
                            {
                              "name": "literal",
                              "value": "'bottomEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'bottomStart'"
                            },
                            {
                              "name": "literal",
                              "value": "'topEnd'"
                            },
                            {
                              "name": "literal",
                              "value": "'topLeft'"
                            },
                            {
                              "name": "literal",
                              "value": "'topRight'"
                            },
                            {
                              "name": "literal",
                              "value": "'topStart'"
                            }
                          ],
                          "required": false
                        }
                      },
                      {
                        "key": "onOpen",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<void>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "void"
                                    }
                                  ],
                                  "raw": "CustomEventT<void>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "onClose",
                        "value": {
                          "name": "signature",
                          "type": "function",
                          "raw": "(evt: CustomEventT<void>) => mixed",
                          "signature": {
                            "arguments": [
                              {
                                "name": "evt",
                                "type": {
                                  "name": "CustomEventT",
                                  "elements": [
                                    {
                                      "name": "void"
                                    }
                                  ],
                                  "raw": "CustomEventT<void>"
                                }
                              }
                            ],
                            "return": {
                              "name": "mixed"
                            }
                          },
                          "required": false
                        }
                      },
                      {
                        "key": "children",
                        "value": {
                          "name": "ReactNode",
                          "raw": "React.Node",
                          "required": false
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "SimpleTagPropsT"
                }
              ],
              "alias": "MenuSurfacePropsT"
            }
          }
        ],
        "returns": null
      },
      {
        "name": "destroy",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "open": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Opens the menu."
      },
      "fixed": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Make the menu position fixed."
      },
      "anchorCorner": {
        "flowType": {
          "name": "union",
          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
          "elements": [
            {
              "name": "literal",
              "value": "'bottomEnd'"
            },
            {
              "name": "literal",
              "value": "'bottomLeft'"
            },
            {
              "name": "literal",
              "value": "'bottomRight'"
            },
            {
              "name": "literal",
              "value": "'bottomStart'"
            },
            {
              "name": "literal",
              "value": "'topEnd'"
            },
            {
              "name": "literal",
              "value": "'topLeft'"
            },
            {
              "name": "literal",
              "value": "'topRight'"
            },
            {
              "name": "literal",
              "value": "'topStart'"
            }
          ]
        },
        "required": false,
        "description": "Manually position the menu to one of the corners."
      },
      "onOpen": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<void>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "void"
                    }
                  ],
                  "raw": "CustomEventT<void>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback for when the menu is opened."
      },
      "onClose": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<void>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "void"
                    }
                  ],
                  "raw": "CustomEventT<void>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback for when the menu is closed."
      },
      "children": {
        "flowType": {
          "name": "ReactNode",
          "raw": "React.Node"
        },
        "required": false,
        "description": "Children to render."
      }
    }
  },
  {
    "description": "A Menu Anchor. When using the anchorCorner prop of Menu, you must set MenuSurfaceAnchors css style position to absolute.",
    "displayName": "MenuSurfaceAnchor",
    "methods": []
  },
  {
    "description": "A Simplified menu component that allows you to pass a handle element and will automatically control the open state and add a MenuSurfaceAnchor",
    "displayName": "SimpleMenu",
    "methods": [],
    "props": {
      "handle": {
        "flowType": {
          "name": "ReactElement",
          "raw": "React.Element<any>",
          "elements": [
            {
              "name": "any"
            }
          ]
        },
        "required": true,
        "description": "An element that will open the menu when clicked"
      },
      "rootProps": {
        "flowType": {
          "name": "Object"
        },
        "required": false,
        "description": "By default, props spread to the Menu component. These will spread to the MenuSurfaceAnchor which is useful for things like overall positioning of the anchor."
      },
      "children": {
        "flowType": {
          "name": "ReactNode",
          "raw": "React.Node"
        },
        "required": false,
        "description": "Children to render"
      },
      "open": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Whether or not the Menu is open."
      },
      "fixed": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Make the menu position fixed."
      },
      "onClose": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<void>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "void"
                    }
                  ],
                  "raw": "CustomEventT<void>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback that when the menu is closed."
      },
      "onSelect": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<SelectedEventDetailT>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "signature",
                      "type": "object",
                      "raw": "{\n  index: number,\n  item: HTMLElement\n}",
                      "signature": {
                        "properties": [
                          {
                            "key": "index",
                            "value": {
                              "name": "number",
                              "required": true
                            }
                          },
                          {
                            "key": "item",
                            "value": {
                              "name": "HTMLElement",
                              "required": true
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "raw": "CustomEventT<SelectedEventDetailT>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback that fires when a Menu item is selected."
      },
      "anchorCorner": {
        "flowType": {
          "name": "union",
          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
          "elements": [
            {
              "name": "literal",
              "value": "'bottomEnd'"
            },
            {
              "name": "literal",
              "value": "'bottomLeft'"
            },
            {
              "name": "literal",
              "value": "'bottomRight'"
            },
            {
              "name": "literal",
              "value": "'bottomStart'"
            },
            {
              "name": "literal",
              "value": "'topEnd'"
            },
            {
              "name": "literal",
              "value": "'topLeft'"
            },
            {
              "name": "literal",
              "value": "'topRight'"
            },
            {
              "name": "literal",
              "value": "'topStart'"
            }
          ]
        },
        "required": false,
        "description": "Manually position the menu to one of the corners."
      }
    }
  },
  {
    "description": "The same as SimpleMenu, but a generic surface.",
    "displayName": "SimpleMenuSurface",
    "methods": [],
    "props": {
      "handle": {
        "flowType": {
          "name": "ReactElement",
          "raw": "React.Element<any>",
          "elements": [
            {
              "name": "any"
            }
          ]
        },
        "required": true,
        "description": "An element that will open the menu when clicked"
      },
      "rootProps": {
        "flowType": {
          "name": "Object"
        },
        "required": false,
        "description": "By default, props spread to the Menu component. These will spread to the MenuSurfaceAnchor which is useful for things like overall positioning of the anchor."
      },
      "children": {
        "flowType": {
          "name": "ReactNode",
          "raw": "React.Node"
        },
        "required": false,
        "description": "Children to render"
      },
      "open": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Opens the menu."
      },
      "fixed": {
        "flowType": {
          "name": "boolean"
        },
        "required": false,
        "description": "Make the menu position fixed."
      },
      "anchorCorner": {
        "flowType": {
          "name": "union",
          "raw": "'bottomEnd' | 'bottomLeft' | 'bottomRight' | 'bottomStart' | 'topEnd' | 'topLeft' | 'topRight' | 'topStart'",
          "elements": [
            {
              "name": "literal",
              "value": "'bottomEnd'"
            },
            {
              "name": "literal",
              "value": "'bottomLeft'"
            },
            {
              "name": "literal",
              "value": "'bottomRight'"
            },
            {
              "name": "literal",
              "value": "'bottomStart'"
            },
            {
              "name": "literal",
              "value": "'topEnd'"
            },
            {
              "name": "literal",
              "value": "'topLeft'"
            },
            {
              "name": "literal",
              "value": "'topRight'"
            },
            {
              "name": "literal",
              "value": "'topStart'"
            }
          ]
        },
        "required": false,
        "description": "Manually position the menu to one of the corners."
      },
      "onOpen": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<void>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "void"
                    }
                  ],
                  "raw": "CustomEventT<void>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback for when the menu is opened."
      },
      "onClose": {
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(evt: CustomEventT<void>) => mixed",
          "signature": {
            "arguments": [
              {
                "name": "evt",
                "type": {
                  "name": "CustomEventT",
                  "elements": [
                    {
                      "name": "void"
                    }
                  ],
                  "raw": "CustomEventT<void>"
                }
              }
            ],
            "return": {
              "name": "mixed"
            }
          }
        },
        "required": false,
        "description": "Callback for when the menu is closed."
      }
    }
  }
]