import { SimpleTagPropsT } from '@rmwc/base';
import { RMWCProviderOptionsT } from '@rmwc/provider';
import { WithRipplePropsT } from '@rmwc/ripple';
import { IconPropsT } from '@rmwc/icon';
import * as React from 'react';
import * as PropTypes from 'prop-types';
export declare type ButtonPropsT = {
    /** Make the Button dense. */
    dense?: boolean;
    /** Make the Button raised. */
    raised?: boolean;
    /** Make the button unelevated. */
    unelevated?: boolean;
    /** Make the button outlined. */
    outlined?: boolean;
    /** make the button disabled */
    disabled?: boolean;
    /** Enable / disable the ripple. */
    ripple?: boolean;
} & SimpleTagPropsT & WithRipplePropsT;
export declare const ButtonRoot: React.ComponentType<ButtonPropsT>;
/** An icon that goes inside of buttons. This is an instance of the Icon component. */
export declare const ButtonIcon: React.ComponentType<IconPropsT>;
/**
 * The Button component. Buttons also accepts all of the props from the Ripple component.
 */
export declare class Button extends React.Component<ButtonPropsT> {
    static defaultProps: {
        raised: boolean;
        unelevated: boolean;
        outlined: boolean;
        dense: boolean;
    };
    static contextTypes: {
        RMWCOptions: PropTypes.Requireable<object>;
    };
    constructor(props: ButtonPropsT, context: Object);
    providerOptions: RMWCProviderOptionsT;
    context: Object;
    render(): JSX.Element;
}
export default Button;
